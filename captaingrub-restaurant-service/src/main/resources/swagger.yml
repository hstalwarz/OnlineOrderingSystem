swagger: '2.0'
info:
  description: Restaurant Ordering System API Documentation
  version: '1.0'
  title: Captain Grub API
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /captaingrub
tags:
  - name: restaurant-controller
    description: Restaurant Controller
paths:
  '/menu/{menuId}':
    get:
      tags:
        - restaurant-controller
      summary: getMenuItem
      operationId: getMenuItemUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/menu/{menuId}/item/{menuItemId}':
    get:
      tags:
        - restaurant-controller
      summary: getMenuItem
      operationId: getMenuItemUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
        - name: menuItemId
          in: path
          description: menuItemId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItem'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /restaurant:
    post:
      tags:
        - restaurant-controller
      summary: addRestaurants
      operationId: addRestaurantsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: newRestaurants
          description: newRestaurants
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/RestaurantDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/restaurant/location/{postalCode}':
    get:
      tags:
        - restaurant-controller
      summary: getRestaurantByPostalCode
      operationId: getRestaurantByPostalCodeUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: postalCode
          in: path
          description: postalCode
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Restaurant'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/restaurant/{restaurantId}':
    get:
      tags:
        - restaurant-controller
      summary: getRestaurantById
      operationId: getRestaurantByIdUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Restaurant'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - restaurant-controller
      summary: deleteRestaurant
      operationId: deleteRestaurantUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/restaurant/{restaurantId}/menu':
    get:
      tags:
        - restaurant-controller
      summary: getMenuByRestaurantId
      operationId: getMenuByRestaurantIdUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Menu'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - restaurant-controller
      summary: addMenus
      operationId: addMenusUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
        - in: body
          name: newMenus
          description: newMenus
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/restaurant/{restaurantId}/menu/{menuId}':
    get:
      tags:
        - restaurant-controller
      summary: getMenuByRestaurantId
      operationId: getMenuByRestaurantIdUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Menu'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - restaurant-controller
      summary: deleteMenu
      operationId: deleteMenuUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/restaurant/{restaurantId}/menu/{menuId}/menuItem':
    post:
      tags:
        - restaurant-controller
      summary: addMenuItems
      operationId: addMenuItemsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
        - in: body
          name: newMenuItems
          description: newMenuItems
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/MenuItemDTO'
      responses:
        '200':
          description: OK
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/restaurant/{restaurantId}/menu/{menuId}/menuItem/{menuItemId}':
    delete:
      tags:
        - restaurant-controller
      summary: deleteMenuItem
      operationId: deleteMenuItemUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: restaurantId
          in: path
          description: restaurantId
          required: true
          type: integer
          format: int64
        - name: menuId
          in: path
          description: menuId
          required: true
          type: integer
          format: int64
        - name: menuItemId
          in: path
          description: menuItemId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
definitions:
  Menu:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
  MenuDTO:
    type: object
    properties:
      description:
        type: string
      name:
        type: string
      restaurant:
        $ref: '#/definitions/Restaurant'
  MenuItem:
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: number
        format: double
  MenuItemDTO:
    type: object
    properties:
      description:
        type: string
      menu:
        $ref: '#/definitions/MenuDTO'
      name:
        type: string
      price:
        type: number
        format: double
  Restaurant:
    type: object
    properties:
      address:
        type: string
      averageRating:
        type: number
        format: double
      category:
        type: string
        enum:
          - CAFE
          - DINING
          - BAKERY
          - FAST_FOOD
      id:
        type: integer
        format: int64
      name:
        type: string
      phone:
        type: string
      postalCode:
        type: integer
        format: int32
  RestaurantDTO:
    type: object
    properties:
      address:
        type: string
      averageRating:
        type: number
        format: double
      category:
        type: string
        enum:
          - CAFE
          - DINING
          - BAKERY
          - FAST_FOOD
      name:
        type: string
      phone:
        type: string
      postalCode:
        type: integer
        format: int32
